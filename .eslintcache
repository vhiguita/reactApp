[{"/Users/victorhiguita/Desktop/tienda/reactApp/src/index.js":"1","/Users/victorhiguita/Desktop/tienda/reactApp/src/reportWebVitals.js":"2","/Users/victorhiguita/Desktop/tienda/reactApp/src/App.jsx":"3","/Users/victorhiguita/Desktop/tienda/reactApp/src/containers/ItemListContainer.jsx":"4","/Users/victorhiguita/Desktop/tienda/reactApp/src/components/navbar/index.jsx":"5","/Users/victorhiguita/Desktop/tienda/reactApp/src/components/itemcount/index.jsx":"6","/Users/victorhiguita/Desktop/tienda/reactApp/src/components/itemlist/index.jsx":"7","/Users/victorhiguita/Desktop/tienda/reactApp/src/components/item/index.jsx":"8","/Users/victorhiguita/Desktop/tienda/reactApp/src/containers/ItemDetailContainer.jsx":"9","/Users/victorhiguita/Desktop/tienda/reactApp/src/components/itemdetail/index.jsx":"10","/Users/victorhiguita/Desktop/tienda/reactApp/src/components/cart/index.jsx":"11","/Users/victorhiguita/Desktop/tienda/reactApp/src/components/cartwidget/index.jsx":"12","/Users/victorhiguita/Desktop/tienda/reactApp/src/components/navbar/products.js":"13","/Users/victorhiguita/Desktop/tienda/reactApp/src/context/cartContext.js":"14","/Users/victorhiguita/Desktop/tienda/reactApp/src/firebase/index.js":"15","/Users/victorhiguita/Desktop/tienda/reactApp/src/components/order/index.jsx":"16","/Users/victorhiguita/Desktop/tienda/reactApp/src/components/login/index.jsx":"17","/Users/victorhiguita/Desktop/tienda/reactApp/src/components/register/index.jsx":"18"},{"size":500,"mtime":1612393733937,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1612393733937,"results":"21","hashOfConfig":"20"},{"size":1367,"mtime":1616117151794,"results":"22","hashOfConfig":"20"},{"size":3307,"mtime":1615857749063,"results":"23","hashOfConfig":"20"},{"size":3045,"mtime":1616379981220,"results":"24","hashOfConfig":"20"},{"size":1235,"mtime":1616367930725,"results":"25","hashOfConfig":"20"},{"size":473,"mtime":1616120392623,"results":"26","hashOfConfig":"20"},{"size":1193,"mtime":1616369351236,"results":"27","hashOfConfig":"20"},{"size":2653,"mtime":1615860343645,"results":"28","hashOfConfig":"20"},{"size":2143,"mtime":1616369552759,"results":"29","hashOfConfig":"20"},{"size":8690,"mtime":1616385259069,"results":"30","hashOfConfig":"20"},{"size":356,"mtime":1613440750618,"results":"31","hashOfConfig":"20"},{"size":689,"mtime":1613445583710,"results":"32","hashOfConfig":"20"},{"size":4492,"mtime":1616385259070,"results":"33","hashOfConfig":"20"},{"size":531,"mtime":1614681201857,"results":"34","hashOfConfig":"20"},{"size":3149,"mtime":1616382272351,"results":"35","hashOfConfig":"20"},{"size":2903,"mtime":1616382770116,"results":"36","hashOfConfig":"20"},{"size":4449,"mtime":1616379743581,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"o0r7c3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},"/Users/victorhiguita/Desktop/tienda/reactApp/src/index.js",[],["82","83"],"/Users/victorhiguita/Desktop/tienda/reactApp/src/reportWebVitals.js",[],"/Users/victorhiguita/Desktop/tienda/reactApp/src/App.jsx",[],"/Users/victorhiguita/Desktop/tienda/reactApp/src/containers/ItemListContainer.jsx",["84","85"],"import React, { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import ItemCount from './../components/itemcount/index';\nimport ItemList from './../components/itemlist/index';\n//import {dbContext} from '../context/dbContext';\nimport { getFirestore } from '../firebase/index';\n\nconst ItemListContainer = ({greeting}) =>{\n  const { categoryId } = useParams();\n  const [products, setProducts] = useState([]);\n  //const dbContextUse = useContext(dbContext);\n  //const { prods } = useContext(dbContext);\n  /*function onAdd(){\n    alert('agregando  al carrito.');\n  }*/\n\n\n  useEffect(() => {\n\n    // const promesa = new Promise ((resolve, reject) => {\n    //    setTimeout( () => {\n    //     resolve(\n    //       [{id: 1, categoryId:1, categoryName:'Relojes Autom치ticos', name: 'Frederique Constant Horological', description: 'DAFC285V5B4 - Autom치tico', image: window.location.origin +'/images/producto-1.jpg', stock: 3, price:2000},\n    //        {id: 2, categoryId:2, categoryName:'Relojes de Pila', name: \"D'Mario Academy\", description: \"ZL3113 - Pila\", image: window.location.origin +'/images/producto-2.jpg', stock: 20, price:200},\n    //        {id: 3, categoryId:1, categoryName:'Relojes Autom치ticos', name: 'Tissot complication T Squelette', description: 'T0704051641100 - Autom치tico', image: window.location.origin +'/images/producto-3.jpg', stock: 5, price:3000}\n    //       ])\n    //     }, 2000);\n    //   });\n    //\n    // promesa.then( e => {\n    //   let products;\n    //   if (typeof(categoryId) !== 'undefined' && categoryId != null) {\n    //     products = e.filter((el) => {\n    //       return el.categoryId === parseInt(categoryId)\n    //     });\n    //   } else {\n    //      products = e;\n    //   }\n    //   setProducts(products);\n    //\n    // });\n    let products;\n    const db = getFirestore();\n    const itemCollection = db.collection(\"items\");\n    console.log(itemCollection)\n    if (typeof(categoryId) !== 'undefined' && categoryId != null) {\n      const categoryCollection = itemCollection.where('categoryName','==',categoryId);\n      categoryCollection.get().then((querySnapshot) =>{\n         if(querySnapshot.size === 0){\n           console.log('No results!');\n         }\n\n         let aux = querySnapshot.docs.map(doc => {\n\n              return { ...doc.data(), id: doc.id };\n         });\n         // console.log('---ITEMS-------');\n         // console.log(aux);\n         setProducts(aux);\n\n      }).catch((error) =>{\n        console.log(error);\n      }).finally(() =>{\n      });\n    } else {\n      itemCollection.get().then((querySnapshot) =>{\n         if(querySnapshot.size === 0){\n           console.log('No results!');\n         }\n\n         let aux = querySnapshot.docs.map(doc => {\n\n              return { ...doc.data(), id: doc.id };\n         });\n         console.log('---ITEMS-------');\n         console.log(aux);\n         setProducts(aux);\n      }).catch((error) =>{\n        console.log(error);\n      }).finally(() =>{\n      });\n    }\n\n\n  }, [categoryId]);\n\n  return (\n\n    <>\n     <div className=\"h1\">{greeting}</div>\n      {/* <ItemCount stock={5} initial={1} onAdd={onAdd}/>*/}\n     <ItemList products={products}/>\n    </>\n\n  );\n}\n\nexport default ItemListContainer;\n","/Users/victorhiguita/Desktop/tienda/reactApp/src/components/navbar/index.jsx",["86","87"],"import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport timer from './timer.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './navbar.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Image from 'react-bootstrap/Image';\nimport CartWidget from './../cartwidget/index';\nimport Order from './../order/index';\nimport {cartContext} from '../../context/cartContext';\nimport { getFirestore } from '../../firebase/index';\nimport { NavItem } from 'react-bootstrap';\nimport products from './products';\n\nconst NavbarComponent = () =>{\n  const [category, setCategory] = useState([]);\n  const { isCartEmpty, numProd } = useContext(cartContext);\n  useEffect(() => {\n\n    // const promesa = new Promise ((resolve, reject) => {\n    //    setTimeout( () => {\n    //     resolve(products)\n    //   }, 1000);\n    // });\n    //\n    // promesa.then( e => {\n    //   let categories = [];\n    //   products.map(category => {\n    //                 var findCategory = categories.find(x => x.categoryId === category.categoryId);\n    //                 if (!findCategory)\n    //                     categories.push(category);\n    //   });\n    //   setCategory(categories);\n    // });\n    const db = getFirestore();\n    const itemCollection = db.collection(\"categories\");\n    itemCollection.get().then((querySnapshot) =>{\n       if(querySnapshot.size === 0){\n         console.log('No results!');\n       }\n\n       let aux = querySnapshot.docs.map(doc => {\n\n            return { ...doc.data(), categoryId: doc.id };\n       });\n       console.log('---CAT-------');\n       console.log(aux);\n       setCategory(aux);\n    }).catch((error) =>{\n      console.log(error);\n    }).finally(() =>{\n    });\n\n  }, []);\n  return (\n   <>\n      <h3>Timer</h3>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\"><Link to=\"/\"><Image src={timer} responsive/>Timer</Link></Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            {/*<Nav.Link href=\"#home\">Inicio</Nav.Link>*/}\n            <NavDropdown title=\"Relojes\" id=\"basic-nav-dropdown\">\n               {category.map((cat)=>{\n\n                return <NavDropdown.Item><Link to={`/category/${cat.categoryName}`}>{cat.categoryName}</Link></NavDropdown.Item>\n\n                })}\n              {/*<NavDropdown.Item><Link to=\"/category/1\">Relojes Autom치ticos</Link></NavDropdown.Item>\n              <NavDropdown.Item><Link to=\"/category/2\">Relojes de Pila</Link></NavDropdown.Item>*/}\n            </NavDropdown>\n            {/*<Nav.Link href=\"#contact\">Contacto</Nav.Link>*/}\n          </Nav>\n\n        </Navbar.Collapse>\n        <NavItem>{ isCartEmpty ? <></> : <div className=\"cart rounded-circle\">{numProd}</div>} <CartWidget/><Link to={`/order`}>Pedidos</Link></NavItem>\n      </Navbar>\n   </>\n\n  );\n}\n\nexport default NavbarComponent;\n","/Users/victorhiguita/Desktop/tienda/reactApp/src/components/itemcount/index.jsx",[],"/Users/victorhiguita/Desktop/tienda/reactApp/src/components/itemlist/index.jsx",[],"/Users/victorhiguita/Desktop/tienda/reactApp/src/components/item/index.jsx",["88","89","90"],"import React , { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './item.css';\n\nconst Item = (props) =>{\n  const [isCartVisible, setIsCartVisible] = useState(true);\n  const [isEmptyStock, setIsEmptyStock] = useState(false);\n  console.log(props);\n // const formatter = new Intl.NumberFormat('en-US', {\n //     style: 'currency',\n //     currency: 'USD',\n //     minimumFractionDigits: 0\n //  });\n useEffect(() => {\n    if(props.stock===0){\n      setIsEmptyStock(true);\n    }\n  }, []);\n  return (\n\n    <>\n    <div className='card'>\n     <img src={props.image}/>\n     <h3 style={{textAlign: \"center\"}}>{props.name}</h3>\n     {isEmptyStock ?<h5 style={{textAlign: \"center\", color:\"red\"}}>Producto agotado.</h5>:<p style={{textAlign: \"center\"}}><strong>Disponibles:</strong> {props.stock}</p>}\n     {isCartVisible ?<Link to={`/item/${props.id}`}>\n            <h4 style={{textAlign: \"center\"}}>Ver producto</h4>\n      </Link>:<></>/*<h5 style={{textAlign: \"center\", color:\"red\"}}>Producto agotado.</h5>*/}\n     {/* <p>Precio: {formatter.format(props.price)}</p>*/}\n    </div>\n\n\n    </>\n\n  );\n}\n\nexport default Item;\n","/Users/victorhiguita/Desktop/tienda/reactApp/src/containers/ItemDetailContainer.jsx",[],"/Users/victorhiguita/Desktop/tienda/reactApp/src/components/itemdetail/index.jsx",["91","92","93","94"],"import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './itemdetail.css';\nimport ItemCount from '../itemcount/index';\nimport {cartContext} from '../../context/cartContext';\nimport { getFirestore } from '../../firebase/index';\nimport firebase from 'firebase/app';\nimport '@firebase/firestore';\n\nconst ItemDetail = ({item}) =>{\n  //console.log(\"........\");\n  //console.log(item.stock);\n  //const [quantity, setQuantity] = useState(0);\n  const [goCart, setGoCart] = useState(false);\n  const [isEmptyStock, setIsEmptyStock] = useState(false);\n  const { addItem, product } = useContext(cartContext);\n  useEffect(() => {\n    //console.log(\"#########\");\n    //console.log(item.stock);\n    if(item.stock===0){\n        console.log(\"is empty\");\n        setIsEmptyStock(true);\n    }\n  }, [item]);\n\n  function onAdd(q){\n    alert('agregando  al carrito: '+q);\n    //setQuantity(q);\n    setGoCart(true);\n    addItem( {item:item, quantity:q} );\n  }\n  const formatter = new Intl.NumberFormat('en-US', {\n     style: 'currency',\n     currency: 'USD',\n     minimumFractionDigits: 0\n  });\n  try{\n\n  if(isNaN(item.price)===false){\n    return (\n\n      <>\n\n      <div className='card'>\n       <img src={item.image}/>\n       <h3 style={{textAlign: \"center\"}}>{item.name}</h3>\n       <p><strong>Descripci칩n:</strong> {item.description}</p>\n       <p><strong>Precio:</strong> {formatter.format(item.price)}</p>\n       {goCart ? <div style={{ padding: '10px', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', width: '300px'}}>\n        <Link to='/cart'><button style={{width: '100px', height: '60px', minWidth: '200px', display:'block'}}>Terminar compra</button></Link>\n        </div>:<div>{isEmptyStock ? <h5 style={{textAlign: \"center\", color:\"red\"}}>Producto agotado.</h5>:<ItemCount stock={item.stock} initial={1} onAdd={onAdd}/>}</div>\n       }\n      </div>\n\n      </>\n    );\n  }else{\n    return (\n\n      <>\n\n      </>\n    );\n  }\n } catch(e){\n    return (\n\n      <>\n\n      </>\n    );\n  }\n}\n\nexport default ItemDetail;\n","/Users/victorhiguita/Desktop/tienda/reactApp/src/components/cart/index.jsx",["95","96","97","98"],"import React, {useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './cart.css';\nimport {cartContext} from '../../context/cartContext';\nimport { getFirestore } from '../../firebase/index';\nimport firebase from 'firebase/app';\nimport '@firebase/firestore';\n\nconst Cart = () =>{\n  const cartContextUse = useContext(cartContext);\n  const { product, addItem, removeItem, clear, clearElements, isCartEmpty, totalPrice } = useContext(cartContext);\n  const formatter = new Intl.NumberFormat('en-US', {\n     style: 'currency',\n     currency: 'USD',\n     minimumFractionDigits: 0\n  });\n  const [numOrder, setNumOrder] = useState('');\n  const [msg, setMsg] = useState('');\n  const [email, setEmail] = useState('');\n  const [isOrderCreated, setOrderCreated] = useState(false);\n  const [isLogged, setIsLogged] = useState(false);\n  const [isVal, setIsVal] = useState(true);\n  const [datos, setDatos] = useState({\n        name: '',\n        //email: '',\n        emailConfirmation: '',\n        phone: ''\n   });\n   const handleInputChange = (event) => {\n         // console.log(event.target.name)\n         // console.log(event.target.value)\n         setDatos({\n             ...datos,\n             [event.target.name] : event.target.value\n         })\n    }\n    let mail = window.localStorage.getItem('email');\n    console.log('mail:'+mail);\n    useEffect(() => {\n       if(mail !== null){\n          setEmail(mail);\n          setIsLogged(true);\n       }else{\n          setEmail('');\n          setIsLogged(false);\n       }\n       if(isCartEmpty){\n          setMsg('');\n       }\n     }, []);\n  // useEffect(() => {\n  //   //console.log(id);\n  //   let total =0;\n  //   product.map(prod => {\n  //                 console.log(totalPrice);\n  //                 console.log(prod);\n  //                 let price = prod.item.price * prod.quantity;\n  //                 console.log(price);\n  //                 total = total + price;\n  //                 console.log(total);\n  //                 // setTotalPrice(totalPrice);\n  //   });\n  //   setTotalPrice(total);\n  // }, []);\n  function clearCart(){\n    console.log('Vaciando carro de compras:');\n    setMsg('');\n    clear();\n  }\n  function removeItemFromCart(id,q){\n    //alert(id);\n    removeItem(id,q);\n  }\n  function newOrder(){\n   // setIsValid(true);\n   let isValid = true;\n   let msg = '';\n   //console.log('enviando datos...' + datos.name + ' ' + datos.email + ' ' + datos.phone);\n   //console.log(datos.name);\n\n    if (datos.name === '' || datos.name === null) {\n        msg = msg + 'El nombre no puede ser vac칤o';\n        isValid = false;\n    }\n    if (datos.phone === '' || datos.phone === null) {\n      if(msg===''){\n        msg = msg + 'El tel칠fono no puede ser vac칤o';\n      }else{\n        msg = msg + ', el tel칠fono no puede ser vac칤o';\n      }\n      isValid = false;\n    }\n    // if (datos.email === '' || datos.email === null) {\n    //   if(msg===''){\n    //     msg = msg + 'El correo electr칩nico no puede ser vac칤o';\n    //   }else{\n    //     msg = msg + ', el correo electr칩nico no puede ser vac칤o';\n    //   }\n    //   isValid = false;\n    // }else if(datos.email !== datos.emailConfirmation) {\n    //   if(msg===''){\n    //     msg = msg + 'Ambos correos electr칩nicos deben coincidir';\n    //   }else{\n    //     msg = msg + ', ambos correos electr칩nicos deben coincidir';\n    //   }\n    //   isValid = false;\n    // }\n    if (datos.emailConfirmation === '' || datos.emailConfirmation === null) {\n     if(msg===''){\n       msg = msg + 'El correo electr칩nico de confirmaci칩n no puede ser vac칤o';\n     }else{\n       msg = msg + ', el correo electr칩nico de confirmaci칩n no puede ser vac칤o';\n     }\n     isValid = false;\n   }else if(email !== datos.emailConfirmation) {\n      if(msg===''){\n        msg = msg + 'Ambos correos electr칩nicos deben coincidir';\n      }else{\n        msg = msg + ', ambos correos electr칩nicos deben coincidir';\n      }\n      isValid = false;\n    }\n    console.log(isValid);\n    console.log(msg);\n    if(isValid){\n      const db = getFirestore();\n      const orders = db.collection(\"orders\");\n      const newOrder_ = {\n        buyer:{ name: datos.name, phone: datos.phone, email: datos.emailConfirmation},\n        items: product,\n        date:firebase.firestore.Timestamp.fromDate(new Date()),\n        total: totalPrice,\n      }\n      orders.add(newOrder_).then(({ id }) =>{\n        setNumOrder(id);\n        setOrderCreated(true);\n        setTimeout(() => setOrderCreated(false),\n          5000\n        );\n        clearElements();\n      }).catch(err => {\n         console.log(err);\n      }).finally(() => {\n\n      });\n      setIsVal(true);\n      setMsg('');\n    }else{\n      //alert(msg);\n      setIsVal(false);\n      setMsg(msg);\n    }\n\n  }\n  return (\n\n    <>\n    {isCartEmpty ?\n      <div>\n          <Link to='/'><div style={{ padding: '10px', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', width: '300px'}}><button style={{width: '100px', height: '60px', minWidth: '200px', display:'block'}}>Lista de productos</button></div></Link>\n          <div style={{ padding: '10px', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', width: '300px'}}>El carro esta vac칤o.</div>\n      </div>\n      :<div style={{ padding: '10px', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', width: '300px'}}><button style={{width: '100px', height: '60px', minWidth: '200px', display:'block'}} onClick={clearCart}>Vaciar carrito</button></div>\n    }\n\n     <div>\n     {isCartEmpty ?\n       <>\n       </>\n       :<form>\n       <div className=\"col-md-3\">\n         <input type=\"text\" placeholder=\"Nombre\" className=\"form-control\" onChange={handleInputChange} name=\"name\" />\n       </div>\n       <div className=\"col-md-3\">\n           <input type=\"text\" placeholder=\"Tel칠fono\" className=\"form-control\" onChange={handleInputChange} name = \"phone\" />\n        </div>\n        <div className=\"col-md-3\">\n          <input type=\"text\" placeholder=\"\" className=\"form-control\" value={email} name=\"email\" readOnly/>\n        </div>\n        <div className=\"col-md-3\">\n          <input type=\"text\" placeholder=\"Confirmar correo electr칩nico\" className=\"form-control\" onChange={handleInputChange} name=\"emailConfirmation\" />\n        </div>\n       </form>\n       }\n       {isVal ?\n         <></>\n         :<h5 style={{textAlign: \"center\", color:\"red\"}}>{msg}</h5>\n       }\n\n       <table id='product'>\n                <thead>\n                  <tr>\n                    <th>Cantidad</th>\n                    <th>Producto</th>\n                    <th>Precio Unit.</th>\n                    <th>Precio Total</th>\n                    <th>Imagen</th>\n                    <th></th>\n                   </tr>\n                </thead>\n                <tbody>\n                {product.map((prod)=>{\n                  return (\n                     <tr key={prod.item.id}>\n                         <td>{prod.quantity}</td>\n                         <td>{prod.item.name}</td>\n                         <td>{formatter.format(prod.item.price)}</td>\n                         <td>{formatter.format(prod.item.price * prod.quantity)}</td>\n                         <td><img className=\"image\" src={prod.item.image}/></td>\n                         <td className='opration'>\n                             <button onClick={()=>{removeItemFromCart(prod.item.id,prod.quantity)}}>Eliminar</button>\n                         </td>\n                     </tr>\n                  )})}\n                </tbody>\n        </table>\n     </div>\n     {isCartEmpty ?\n       <>\n       </>\n       :<div>\n        <div style={{ textAlign: 'center', alignItems: 'center', justifyContent: 'center', width: '300px'}}>\n         <strong>TOTAL = </strong> {formatter.format(totalPrice)}\n        </div>\n        {isLogged ?<div style={{ padding: '10px', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', width: '300px'}}><button style={{width: '100px', height: '60px', minWidth: '200px', display:'block'}} onClick={newOrder}>Finalizar compra</button></div>:<Link to='/login'><div style={{ padding: '10px', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', width: '300px'}}><button style={{width: '100px', height: '60px', minWidth: '200px', display:'block'}}>Iniciar sesi칩n</button></div></Link>}\n        </div>\n     }\n     {isOrderCreated ?\n       <><h5 style={{textAlign: \"center\", color:\"red\"}}>Se ha generado la orden # {numOrder}.</h5></>\n       :<></>\n     }\n    </>\n\n  );\n}\n\nexport default Cart;\n","/Users/victorhiguita/Desktop/tienda/reactApp/src/components/cartwidget/index.jsx",[],"/Users/victorhiguita/Desktop/tienda/reactApp/src/components/navbar/products.js",[],"/Users/victorhiguita/Desktop/tienda/reactApp/src/context/cartContext.js",["99","100","101","102","103"],"/Users/victorhiguita/Desktop/tienda/reactApp/src/firebase/index.js",[],"/Users/victorhiguita/Desktop/tienda/reactApp/src/components/order/index.jsx",["104","105","106"],"import React , {useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { getFirestore } from '../../firebase/index';\nimport firebase from 'firebase/app';\nimport '@firebase/firestore';\n\nconst Order = (props) =>{\n  const [noOrder, setNoOrder] = useState(false);\n  const [orders, setOrders] = useState([]);\n  const formatter = new Intl.NumberFormat('en-US', {\n     style: 'currency',\n     currency: 'USD',\n     minimumFractionDigits: 0\n  });\n  useEffect(() => {\n\n    const db = getFirestore();\n    const orderCollection = db.collection(\"orders\");\n    let email = window.localStorage.getItem('email');\n    //const o_Collection = orderCollection.where('buyer.email','==','vhiguitacardona@gmail.com');\n    if(email !== null){\n      const o_Collection = orderCollection.where('buyer.email','==',email);\n      o_Collection.get().then((d) =>{\n          if(d.size === 0){\n            console.log('No results!');\n            setNoOrder(true);\n          }else{\n            let aux = d.docs.map(doc => {\n                  let s = '';\n                  console.log(doc.data().items[0].item);\n                  for(let i=0;i<doc.data().items.length;i++){\n                    s = s + '('+doc.data().items[i].quantity+') - '+doc.data().items[i].item.name+',';\n                  }\n                  s = s.substring(0, s.length - 1);\n                  console.log(s);\n                  return { ...doc.data(), detail: s, id: doc.id };\n            });\n            console.log(aux);\n            setOrders(aux);\n          }\n        }).catch((error) =>{\n          console.log(error);\n        }).finally(() =>{\n        });\n    }else{\n      //setNoOrder(true);\n    }\n\n\n  }, []);\n  return (\n\n    <>\n    <table id='product'>\n             <thead>\n               <tr>\n                 <th>Ref compra</th>\n                 <th>Detalle</th>\n                 <th>Total</th>\n                 <th>Fecha</th>\n                </tr>\n             </thead>\n             <tbody>\n             {orders.map((o)=>{\n               return (\n                 <tr key={o.id}>\n                     <td>{o.id}</td>\n                     <td>{o.detail}</td>\n                     <td>{formatter.format(o.total)}</td>\n                     <td>{new Date((o.date.toDate())).toString()}</td>\n                 </tr>\n                  // <tr key={prod.item.id}>\n                  //     <td>{prod.quantity}</td>\n                  //     <td>{prod.item.name}</td>\n                  //     <td>{formatter.format(prod.item.price)}</td>\n                  //     <td>{formatter.format(prod.item.price * prod.quantity)}</td>\n                  //     <td><img className=\"image\" src={prod.item.image}/></td>\n                  //     <td className='opration'>\n                  //         <button onClick={()=>{removeItemFromCart(prod.item.id)}}>Eliminar</button>\n                  //     </td>\n                  // </tr>\n               )})}\n             </tbody>\n     </table>\n     {noOrder ?\n       <h5 style={{textAlign: \"center\", color:\"red\"}}>No hay pedidos.</h5>\n       :<></>\n     }\n    </>\n\n  );\n}\n\nexport default Order;\n","/Users/victorhiguita/Desktop/tienda/reactApp/src/components/login/index.jsx",["107","108"],"/Users/victorhiguita/Desktop/tienda/reactApp/src/components/register/index.jsx",["109","110"],"import React , {useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { getFirestore } from '../../firebase/index';\nimport firebase from 'firebase/app';\nimport '@firebase/firestore';\n\nconst Register = () =>{\n  const [isVal, setIsVal] = useState(true);\n  const [msg, setMsg] = useState('');\n  const [datos, setDatos] = useState({\n        name: '',\n        email: '',\n        pwd: '',\n        pwdConfirmation: ''\n   });\n   const handleInputChange = (event) => {\n         console.log(datos);\n         console.log(event.target.name)\n         console.log(event.target.value)\n         setDatos({\n             ...datos,\n             [event.target.name] : event.target.value\n         })\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let isValid = true;\n    let msg = '';\n    //setIsVal(true);\n    //setMsg('');\n    console.log(isValid);\n    console.log('enviando datos...' + datos.email + ',pwd: ' + datos.pwd+ ',pwdConfirmation: ' + datos.pwdConfirmation);\n    if (datos.name === '' || datos.name === null) {\n        msg = msg + 'El nombre no puede ser vac칤o';\n        isValid = false;\n    }\n    if (datos.email === '' || datos.email === null) {\n      if(msg===''){\n        msg = msg + 'El correo electr칩nico no puede ser vac칤o';\n      }else{\n        msg = msg + ', el correo electr칩nico no puede ser vac칤o';\n      }\n      isValid = false;\n    }\n    if (datos.pwd === '' || datos.pwd === null) {\n      if(msg===''){\n        msg = msg + 'La contrase침a no puede ser vac칤a';\n      }else{\n        msg = msg + ', la contrase침a no puede ser vac칤a';\n      }\n      isValid = false;\n    }else if(datos.pwd !== datos.pwdConfirmation) {\n      if(msg===''){\n        msg = msg + 'Ambas contrase침as deben coincidir';\n      }else{\n        msg = msg + ', ambas contrase침as deben coincidir';\n      }\n      isValid = false;\n    }\n    console.log(isValid);\n    if(isValid){\n      const db = getFirestore();\n      const oUser = db.collection(\"users\");\n      const o_User = oUser.where('email','==',datos.email);\n      o_User.get().then((d) =>{\n          if(d.size !== 0){\n            msg = \"Ya existe un usuario registrado con el mismo correo\";\n            setIsVal(false);\n            setMsg(msg);\n          }else{\n            const newUser = {\n              name: datos.name,\n              email:datos.email,\n              password: datos.pwd,\n              registerDate:firebase.firestore.Timestamp.fromDate(new Date()),\n            }\n            oUser.add(newUser).then(({ id }) =>{\n              /*setDatos({\n                    name: '',\n                    email: '',\n                    pwd: '',\n                    pwdConfirmation: ''\n               });*/\n              alert(\"El usuario se ha registrado con 칠xito ahora puede iniciar sesi칩n.\");\n              event.target.reset();\n\n            }).catch(err => {\n               console.log(err);\n            }).finally(() => {\n\n            });\n            setIsVal(true);\n            setMsg('');\n          }\n        }).catch((error) =>{\n          console.log(error);\n        }).finally(() =>{\n        });\n    }else{\n      setIsVal(false);\n      setMsg(msg);\n    }\n  }\n  return (\n\n    <>\n      <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <input type=\"text\" placeholder=\"Nombre\" className=\"form-control\" name=\"name\" onChange={handleInputChange}/>\n      </div>\n       <div className=\"form-group\">\n         <input type=\"text\" placeholder=\"Email\" className=\"form-control\" name=\"email\" onChange={handleInputChange}/>\n       </div>\n       <div className=\"form-group\">\n         <input type=\"password\" placeholder=\"Contrase침a\" className=\"form-control\" name=\"pwd\" onChange={handleInputChange}/>\n       </div>\n       <div className=\"form-group\">\n         <input type=\"password\" placeholder=\"Confirmar Contrase침a\" className=\"form-control\" name=\"pwdConfirmation\" onChange={handleInputChange}/>\n       </div>\n       <div className=\"form-group\">\n         <input type=\"submit\" value=\"Registrarse\" className=\"btn btn-success\" />\n       </div>\n       <div className=\"form-group\">\n         <Link to={`/login`}>\n                 <h5 style={{textAlign: \"center\"}}>Inicio de sesi칩n</h5>\n         </Link>\n       </div>\n      </form>\n      {isVal ?\n        <></>\n        :<h5 style={{textAlign: \"center\", color:\"red\"}}>{msg}</h5>\n      }\n    </>\n\n  );\n}\n\nexport default Register;\n",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":38,"nodeType":"117","messageId":"118","endLine":1,"endColumn":48},{"ruleId":"115","severity":1,"message":"119","line":43,"column":9,"nodeType":"117","messageId":"118","endLine":43,"endColumn":17},{"ruleId":"115","severity":1,"message":"120","line":11,"column":8,"nodeType":"117","messageId":"118","endLine":11,"endColumn":13},{"ruleId":"115","severity":1,"message":"119","line":15,"column":8,"nodeType":"117","messageId":"118","endLine":15,"endColumn":16},{"ruleId":"115","severity":1,"message":"121","line":7,"column":25,"nodeType":"117","messageId":"118","endLine":7,"endColumn":41},{"ruleId":"122","severity":1,"message":"123","line":19,"column":6,"nodeType":"124","endLine":19,"endColumn":8,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":24,"column":6,"nodeType":"128","endLine":24,"endColumn":30},{"ruleId":"115","severity":1,"message":"129","line":7,"column":10,"nodeType":"117","messageId":"118","endLine":7,"endColumn":22},{"ruleId":"115","severity":1,"message":"130","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":16},{"ruleId":"115","severity":1,"message":"131","line":17,"column":20,"nodeType":"117","messageId":"118","endLine":17,"endColumn":27},{"ruleId":"126","severity":1,"message":"127","line":46,"column":8,"nodeType":"128","endLine":46,"endColumn":31},{"ruleId":"115","severity":1,"message":"132","line":11,"column":9,"nodeType":"117","messageId":"118","endLine":11,"endColumn":23},{"ruleId":"115","severity":1,"message":"133","line":12,"column":20,"nodeType":"117","messageId":"118","endLine":12,"endColumn":27},{"ruleId":"122","severity":1,"message":"134","line":51,"column":9,"nodeType":"124","endLine":51,"endColumn":11,"suggestions":"135"},{"ruleId":"126","severity":1,"message":"127","line":210,"column":30,"nodeType":"128","endLine":210,"endColumn":76},{"ruleId":"115","severity":1,"message":"130","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":16},{"ruleId":"115","severity":1,"message":"136","line":33,"column":9,"nodeType":"117","messageId":"118","endLine":33,"endColumn":20},{"ruleId":"115","severity":1,"message":"136","line":106,"column":14,"nodeType":"117","messageId":"118","endLine":106,"endColumn":25},{"ruleId":"115","severity":1,"message":"137","line":126,"column":11,"nodeType":"117","messageId":"118","endLine":126,"endColumn":25},{"ruleId":"115","severity":1,"message":"136","line":133,"column":11,"nodeType":"117","messageId":"118","endLine":133,"endColumn":22},{"ruleId":"115","severity":1,"message":"116","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":37},{"ruleId":"115","severity":1,"message":"138","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":14},{"ruleId":"115","severity":1,"message":"130","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":37},{"ruleId":"115","severity":1,"message":"130","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":37},{"ruleId":"115","severity":1,"message":"139","line":1,"column":39,"nodeType":"117","messageId":"118","endLine":1,"endColumn":48},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'products' is defined but never used.","'Order' is defined but never used.","'setIsCartVisible' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.stock'. Either include it or remove the dependency array.","ArrayExpression",["142"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getFirestore' is defined but never used.","'firebase' is defined but never used.","'product' is assigned a value but never used.","'cartContextUse' is assigned a value but never used.","'addItem' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isCartEmpty' and 'mail'. Either include them or remove the dependency array.",["143"],"'updateStock' is assigned a value but never used.","'itemCollection' is assigned a value but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [props.stock]",{"range":"148","text":"149"},"Update the dependencies array to be: [isCartEmpty, mail]",{"range":"150","text":"151"},[562,564],"[props.stock]",[1642,1644],"[isCartEmpty, mail]"]